spring.application.name=stockprocessor
#server.port=8007

spring.datasource.url= jdbc:postgresql://localhost:5432/stock-db
spring.datasource.username= stock-user
spring.datasource.password= stock-pass

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= create

management.endpoints.web.exposure.include=*
springfox.documentation.swagger-ui.enabled=true
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

product.kafka.topic.createdTopic=products.created
product.kafka.topic.updatedTopic=products.updated
product.kafka.topic.deletedTopic=products.deleted


#spring.kafka.producer.acks=-1
#spring.kafka.producer.bootstrap-servers=kafka0:9092
#spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.producer.group-id=product-service
#
#spring.kafka.consumer.bootstrap-servers=kafka0:9092
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.group-id=product-service

